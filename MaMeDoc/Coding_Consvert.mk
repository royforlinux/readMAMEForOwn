##MAME编码公约

####编码归类
 - 操作系统定制编码（OSD）
 - MAME核心代码
 - CPU内核
 - 音频引擎
 - 游戏驱动

####命名
- 函数，方法和变量名使用 low_under_convention.
- 静态成员函数应该有一个静态标示(eg:static_time_callback;)
- 一个类的成员变量应该有一标准前缀例如
    - 普通变量应该有一个m_prefix(eg:m_driver;)
    - 静态成员应该有一个s_prefix(eg:s_driver_table;)
    - 静态常量成员应该全部用大写字母，及下划线
- 宏、枚举变量、和宏定义常量，应该使用全大写字母和下划线命名
- 如果常量作为一个群组的一部分，那么应该加以个动作前缀(eg:enum{ADDRESS_SPACE_PROGRAM,ADDRESS_SPACE_DATA,ADDRESS_SPACE_IO};)
- 更多的使用描述类变量，而不是“i、j”之类。
- 永远不要用“my”做前缀。比如“myobject”，你应该直接用“object”。


####注释
- 程序中的注释更应该用\\的C++风格注释，尽管\*格式的C风格注释更加普遍
- 每一个函数都应在他之前加入注释来介绍这儿函数是做什么的。
- 每一个文件在开头都应该包含一段license，如果没有对应的license你可能跟喜欢复制一个MAME的版本。


####间距
- 在二元运算符的左右应该各加一个空格。
- 在圆括号中间不应该加入空格。
- 在函数名和它的括号之间不应该加入空格。
- 在关键词“for、if、while”和他们的参数列表之间应该加入空格。
- 右括号应该在对应的列关闭，并对其对应的左括号。
- 在函数开始之前和结束之后都应该加入两行空白行。

####表达式
- 在return语句中不要使用括号，它不是一个函数。
- 除非使表达式更清楚，否则不要过量的使用括号。
- 在使用指针的时候永远初始化为NULL 而不是 0。
- 正确的在比较中使用NULL和0。
- 不要使用布尔类型做比较。
####头文件
- 文件声明顺序
    - 标准头文件
    - 重定义
    - 包含文件
    - 编译标志
    - 常量
    - 类型定义
    - 宏
    - 全局变量
    - 函数声明
    - 内联函数
- 头文件中的函数声明一般不会用extern修饰符
- 所有的头文件都应该支持防止重包含。这通过在文件开头加入

    
    `#pragam once`
    `#ifndef __FILENAME_H__`
    `#define __FILENAME_H__`
    并且在结尾加入
    `#endif /* __FILENAME__H__ */`
    作为结尾。
- 源文件
    - 在源文件中的书写顺序
    - 标准头文件
    - 包含文件
    - 编译标识
    - 常量
    - 类型定义
    - 宏
    - 全局变量
    - 内部函数声明
    - 内联函数
    - 外部参照函数
    - 内部函数

 
